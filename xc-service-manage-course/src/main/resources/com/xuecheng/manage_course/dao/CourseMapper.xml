<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xuecheng.manage_course.dao.CourseMapper">
    <resultMap id="teachPlanMap" type="com.xuecheng.framework.domain.course.ext.TeachPlanNode">
        <id column="one_id" property="id" />
        <result column="one_name" property="pname" />
        <collection property="children" ofType="com.xuecheng.framework.domain.course.ext.TeachPlanNode">
            <id column="two_id" property="id"/>
            <result column="two_name" property="pname"/>
            <collection property="children" ofType="com.xuecheng.framework.domain.course.ext.TeachPlanNode">
                <id column="three_id" property="id"/>
                <result column="three_name" property="pname" />
            </collection>
        </collection>
    </resultMap>

    <select id="findTeachPlanList" parameterType="java.lang.String" resultMap="teachPlanMap">
        SELECT
          a.id one_id,
          a.pname one_name,
          b.id two_id,
          b.pname two_name,
          c.id three_id,
          c.pname three_name
        FROM
          teachplan a LEFT JOIN teachplan b ON a.id = b.parentid LEFT JOIN teachplan c ON b.id = c.parentid
        WHERE
          a.parentid = '0'
          <if test="_parameter != null and _parameter != '' ">
            and a.courseid= #{courseId}
          </if>
        ORDER BY
          a.orderby, b.orderby, c.orderby
    </select>

    <select id="findCourseListPage" parameterType="com.xuecheng.framework.domain.course.request.CourseListRequest"
        resultType="com.xuecheng.framework.domain.course.ext.CourseInfo">
        SELECT
            course_base.*,
            (SELECT pic FROM course_pic WHERE courseid = course_base.id) pic
        FROM
            course_base
    </select>
</mapper>